{"remainingRequest":"C:\\Users\\usuario\\Documents\\GitHub\\pedidos\\angular\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\usuario\\Documents\\GitHub\\pedidos\\angular\\node_modules\\ramda\\es\\symmetricDifferenceWith.js","dependencies":[{"path":"C:\\Users\\usuario\\Documents\\GitHub\\pedidos\\angular\\node_modules\\ramda\\es\\symmetricDifferenceWith.js","mtime":1507569550000},{"path":"C:\\Users\\usuario\\Documents\\GitHub\\pedidos\\angular\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1541191335032},{"path":"C:\\Users\\usuario\\Documents\\GitHub\\pedidos\\angular\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["import _curry3 from './internal/_curry3';\nimport concat from './concat';\nimport differenceWith from './differenceWith';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both. Duplication is determined according to the value\n * returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifference, R.difference, R.differenceWith\n * @example\n *\n *      var eqA = R.eqBy(R.prop('a'));\n *      var l1 = [{a: 1}, {a: 2}, {a: 3}, {a: 4}];\n *      var l2 = [{a: 3}, {a: 4}, {a: 5}, {a: 6}];\n *      R.symmetricDifferenceWith(eqA, l1, l2); //=> [{a: 1}, {a: 2}, {a: 5}, {a: 6}]\n */\nvar symmetricDifferenceWith = /*#__PURE__*/_curry3(function symmetricDifferenceWith(pred, list1, list2) {\n  return concat(differenceWith(pred, list1, list2), differenceWith(pred, list2, list1));\n});\nexport default symmetricDifferenceWith;",null]}